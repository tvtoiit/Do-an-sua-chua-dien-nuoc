package com.example.CuoiKi.ai;

import okhttp3.*;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.stereotype.Service;

import java.io.IOException;

@Service
public class OpenAIApiService {

	private static final String API_KEY = "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";
	private static final String API_URL = "https://openrouter.ai/api/v1/chat/completions";

	private final OkHttpClient httpClient = new OkHttpClient();

	public String moderateArticle(String title, String description, String content) throws IOException {
		JSONObject message = new JSONObject();
		message.put("role", "user");

		// üî• prompt c√≥ ch√®n d·ªØ li·ªáu ƒë√∫ng c√°ch
		String prompt = String.format(
				"""
						B·∫°n l√† m·ªôt h·ªá th·ªëng ki·ªÉm duy·ªát n·ªôi dung. H√£y ki·ªÉm tra n·ªôi dung sau ƒë√¢y c√≥ vi ph·∫°m c√°c ƒëi·ªÅu ki·ªán sau hay kh√¥ng:

						1. Mang t√≠nh ch·∫•t b·∫°o l·ª±c, k√≠ch ƒë·ªông, ƒëe d·ªça.
						2. Mang t√≠nh ch·∫•t t√¥n gi√°o c·ª±c ƒëoan ho·∫∑c g√¢y tranh c√£i v·ªÅ t√¥n gi√°o.
						3. Vi ph·∫°m ph√°p lu·∫≠t ho·∫∑c c·ªï v≈© h√†nh vi tr√°i ph√°p lu·∫≠t.
						4. S·ª≠ d·ª•ng ng√¥n t·ª´ nh·∫°y c·∫£m, th√¥ t·ª•c, ph√¢n bi·ªát ƒë·ªëi x·ª≠ ho·∫∑c mang t√≠nh x√∫c ph·∫°m.
						5. Kh√¥ng li√™n quan ƒë·∫øn vi·ªác chia s·∫ª kinh nghi·ªám s·ª≠a ch·ªØa thi·∫øt b·ªã gia d·ª•ng, ho·∫∑c kh√¥ng n√≥i v·ªÅ c√°c v·∫•n ƒë·ªÅ c·ªßa thi·∫øt b·ªã gia d·ª•ng.

						Tr·∫£ l·ªùi b·∫±ng JSON v·ªõi ƒë·ªãnh d·∫°ng:
						{"result": "Approved", "reason": ""}
						ho·∫∑c
						{"result": "Rejected", "reason": "L√Ω do t·ª´ ch·ªëi b√†i vi·∫øt"}

						Ti√™u ƒë·ªÅ: %s

						M√¥ t·∫£: %s

						N·ªôi dung: %s
						""",
				title, description, content);

		message.put("content", prompt);

		JSONObject bodyJson = new JSONObject();
		bodyJson.put("model", "openai/gpt-3.5-turbo");
		bodyJson.put("messages", new JSONArray().put(message));
		bodyJson.put("temperature", 0.2);

		RequestBody requestBody = RequestBody.create(bodyJson.toString(), MediaType.parse("application/json"));

		Request request = new Request.Builder().url(API_URL).header("Authorization", "Bearer " + API_KEY)
				.header("HTTP-Referer", "http://localhost:9090").header("X-Title", "CuoiKi").post(requestBody).build();

		try (Response response = httpClient.newCall(request).execute()) {
			if (!response.isSuccessful()) {
				throw new IOException(
						"L·ªói khi g·ªçi OpenRouter API: " + response.code() + " - " + response.body().string());
			}

			String responseBody = response.body().string();
			JSONObject json = new JSONObject(responseBody);
			String contentReply = json.getJSONArray("choices").getJSONObject(0).getJSONObject("message")
					.getString("content");

			// ‚úÖ Ki·ªÉm tra n·ªôi dung ph·∫£n h·ªìi b·∫Øt ƒë·∫ßu b·∫±ng { ƒë·ªÉ ch·∫Øc ch·∫Øn l√† JSON
			if (!contentReply.trim().startsWith("{")) {
				throw new IOException("Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá t·ª´ AI: " + contentReply);
			}

			return contentReply;
		}
	}

}
